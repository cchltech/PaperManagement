<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cchl.dao.TeacherMapper">
    <resultMap id="teacher" type="com.cchl.entity.Teacher">
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="sex" jdbcType="TINYINT" property="sex"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="department_id" jdbcType="INTEGER" property="departmentId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="phone" jdbcType="BIGINT" property="phone"/>
        <association property="department" columnPrefix="department_"
                     resultMap="com.cchl.dao.DepartmentMapper.department"/>
    </resultMap>
    <select id="selectById" resultMap="teacher">
        SELECT
            t.id,
            t.name,
            t.sex,
            t.email,
            t.phone,
            d.id   department_id,
            d.name department_name
        FROM teacher t
            LEFT JOIN department d ON t.department_id = d.id
        WHERE t.id = #{id}
    </select>
    <insert id="insert" parameterType="com.cchl.entity.Teacher" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO teacher(id, name, password, sex, phone, email, department_id, user_id) VALUE (#{id}, #{name}, #{password}, #{sex}, #{phone}, #{email}, #{departmentId}, #{userId})
    </insert>
    <select id="selectAll" resultMap="teacher">
        SELECT
            id,
            name,
            password,
            sex,
            email,
            department_id,
            user_id,
            phone
        FROM teacher
    </select>
    <select id="loginCheck" resultType="java.lang.Integer">
        SELECT user_id
        FROM teacher
        WHERE id = #{id} AND password = #{password}
    </select>
    <select id="isTeacher" resultType="java.lang.Integer">
        SELECT count(t.id)
        FROM teacher t, user
        WHERE t.id = #{id} AND t.password = #{password}
        AND user.id = t.id AND user.status = 1
    </select>
    <select id="selectDepartmentIdByUserId" resultType="java.lang.Integer">
        SELECT department_id FROM teacher WHERE user_id = #{userId}
    </select>
    <select id="selectByStatus" resultMap="teacher">
        SELECT
        t.id,
        t.name,
        t.sex,
        t.phone,
        t.phone,
        t.email,
        d.name department_name
        FROM teacher t
        LEFT JOIN department d ON t.department_id = d.id
        LEFT JOIN user u ON t.user_id = u.id
        WHERE t.department_id = #{departmentId}
        <if test="!all">
            AND u.status = #{status}
        </if>
        LIMIT #{page}, #{limit}
    </select>
    <select id="totalNumber" resultType="java.lang.Integer">
        SELECT count(t.id) FROM teacher t
        LEFT JOIN user u ON t.user_id = u.id
        WHERE t.department_id = #{departmentId}
        <if test="!all">
            AND u.status = #{status}
        </if>
    </select>
    <select id="selectByDepartmentId" resultMap="teacher">
        SELECT
        t.id,
        t.name,
        t.sex,
        t.email,
        t.phone,
        d.id   department_id,
        d.name department_name
        FROM teacher t
        LEFT JOIN department d ON t.department_id = d.id
        WHERE t.department_id = #{departmentId}
        ORDER BY t.id
    </select>
</mapper>