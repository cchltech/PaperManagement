<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cchl.dao.StudentMapper">
    <resultMap id="student" type="com.cchl.entity.Student">
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="sex" jdbcType="TINYINT" property="sex"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="department_id" jdbcType="INTEGER" property="departmentId"/>
        <result column="grade" jdbcType="TINYINT" property="grade"/>
        <result column="major_id" jdbcType="INTEGER" property="majorId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="phone" jdbcType="BIGINT" property="phone"/>
        <association property="department" columnPrefix="department_"
                     resultMap="com.cchl.dao.DepartmentMapper.department"/>
        <association property="major" columnPrefix="major_" resultMap="com.cchl.dao.MajorMapper.major"/>
    </resultMap>

    <select id="selectById" resultMap="student">
        SELECT
            s.id,
            s.name,
            s.sex,
            s.email,
            s.department_id,
            s.grade,
            s.major_id,
            s.phone,
            s.user_id,
            d.id   department_id,
            d.name department_name,
            m.id   major_id,
            m.name major_name
        FROM student s
            LEFT JOIN department d ON s.department_id = d.id
            LEFT JOIN major m ON s.major_id = m.id
        WHERE s.id = #{id}
    </select>
    <insert id="insert">
        INSERT IGNORE INTO student VALUES
            (#{id}, #{name}, #{password}, #{sex}, #{phone}, #{email}, #{departmentId}, #{grade}, #{majorId}, #{userId})
    </insert>
    <select id="loginCheck" resultType="java.lang.Integer">
        SELECT s.user_id
        FROM student s
            LEFT JOIN user u ON s.user_id = u.id
        WHERE s.id = #{id} AND password = #{password} AND u.status = 1
    </select>
    <select id="selectUnTitle" resultMap="student">
        SELECT
            s.id,
            s.name,
            s.sex,
            s.email,
            s.department_id,
            s.grade,
            s.major_id,
            s.phone,
            d.id   department_id,
            d.name department_name,
            m.id   major_id,
            m.name major_name
        FROM student s
            LEFT JOIN user u ON s.user_id = u.id
            LEFT JOIN department d ON s.department_id = d.id
            LEFT JOIN major m ON s.major_id = m.id
        WHERE u.status = 1 AND s.department_id = #{departmentId} AND s.user_id IN (SELECT user_id
                            FROM user_paper up
                            WHERE up.paper_plan_id IN (SELECT id
                                                       FROM paper_plan pp
                                                       WHERE pp.title_id = 0))
        ORDER BY s.department_id, id
    </select>
    <select id="selectByUserId" resultMap="student">
        SELECT
            s.id,
            s.name,
            s.sex,
            s.email,
            s.department_id,
            s.grade,
            s.major_id,
            s.phone,
            d.id   department_id,
            d.name department_name,
            m.id   major_id,
            m.name major_name
        FROM user u, student s
            LEFT JOIN department d ON s.department_id = d.id
            LEFT JOIN major m ON s.major_id = m.id
        WHERE s.user_id = #{userId}
    </select>
    <update id="updateEmail">
        UPDATE student SET email = #{email} WHERE id = #{id}
    </update>
    <update id="updatePhone">
        UPDATE student SET phone = #{phone} WHERE id = #{id}
    </update>
    <select id="totalNumber" resultType="java.lang.Integer">
        SELECT count(id)
        FROM student
        LEFT JOIN user u on u.id = student.user_id
        WHERE department_id = #{departmentId} AND user.status = 1
    </select>
    <select id="selectByDepartmentId" resultMap="student">
        SELECT
            s.id,
            s.name,
            s.sex,
            s.email,
            s.department_id,
            s.grade,
            s.major_id,
            s.phone,
            d.id   department_id,
            d.name department_name,
            m.id   major_id,
            m.name major_name
        FROM `user` u, student s
            LEFT JOIN department d ON s.department_id = d.id
            LEFT JOIN major m ON s.major_id = m.id
        WHERE s.department_id = #{departmentId}
        ORDER BY s.id
    </select>
    <select id="selectByPaperPlanId" resultMap="student">
        SELECT
            s.id,
            s.name,
            s.sex,
            s.email,
            s.department_id,
            s.grade,
            s.major_id,
            s.phone,
            d.id   department_id,
            d.name department_name,
            m.id   major_id,
            m.name major_name
        FROM student s
            LEFT JOIN department d ON s.department_id = d.id
            LEFT JOIN major m ON s.major_id = m.id
            LEFT JOIN user u ON s.user_id = u.id
            LEFT JOIN user_paper up ON u.id = up.user_id
        WHERE up.paper_plan_id = #{paperPlanId}
        ORDER BY s.id
    </select>
    <select id="selectByTitleId" resultType="com.cchl.entity.Student">
        SELECT
            s.id,
            s.name,
            s.sex,
            s.email,
            s.department_id,
            s.grade,
            s.major_id,
            s.phone
        FROM student s
            LEFT JOIN user_paper up ON s.user_id = up.user_id
            LEFT JOIN paper_plan p ON up.paper_plan_id = p.id
        WHERE p.title_id = #{titleId}
    </select>
</mapper>