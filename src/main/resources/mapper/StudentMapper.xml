<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cchl.dao.StudentMapper">
    <resultMap id="student" type="com.cchl.entity.Student">
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="sex" jdbcType="TINYINT" property="sex"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="department_id" jdbcType="INTEGER" property="departmentId"/>
        <result column="grade" jdbcType="TINYINT" property="grade"/>
        <result column="major_id" jdbcType="INTEGER" property="majorId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="phone" jdbcType="BIGINT" property="phone"/>
        <association property="department" columnPrefix="department_"
                     resultMap="com.cchl.dao.DepartmentMapper.department"/>
        <association property="major" columnPrefix="major_" resultMap="com.cchl.dao.MajorMapper.major"/>
    </resultMap>

    <select id="selectById" resultMap="student">
        SELECT
            s.id,
            s.name,
            s.sex,
            s.email,
            s.department_id,
            s.grade,
            s.major_id,
            s.phone,
            d.id   department_id,
            d.name department_name,
            m.id   major_id,
            m.name major_name
        FROM student s
            LEFT JOIN department d ON s.department_id = d.id
            LEFT JOIN major m ON s.major_id = m.id
        WHERE s.id = #{id}
    </select>
    <insert id="insert">
        INSERT IGNORE INTO student VALUES
            (#{id}, #{name}, #{password}, #{sex}, #{email}, #{departmentId}, #{grade}, #{majorId}, #{userId}, #{phone})
    </insert>
    <select id="loginCheck" resultType="java.lang.Integer">
        SELECT s.user_id
        FROM student s, user
        WHERE s.id = #{id} AND password = #{password}
              AND user.id = s.id AND user.status = 1
    </select>
    <select id="selectUnTitle" resultMap="student">
        SELECT
            s.id,
            s.name,
            s.sex,
            s.email,
            s.department_id,
            s.grade,
            s.major_id,
            s.phone,
            d.id   department_id,
            d.name department_name,
            m.id   major_id,
            m.name major_name
        FROM user u, student s
            LEFT JOIN department d ON s.department_id = d.id
            LEFT JOIN major m ON s.major_id = m.id
        WHERE s.user_id = u.id AND u.id NOT IN (SELECT user_id
                                                FROM user_paper)
        ORDER BY s.department_id, id
    </select>
    <select id="selectByUserId" resultMap="student">
        SELECT
            s.id,
            s.name,
            s.sex,
            s.email,
            s.department_id,
            s.grade,
            s.major_id,
            s.phone,
            d.id   department_id,
            d.name department_name,
            m.id   major_id,
            m.name major_name
        FROM user u, student s
            LEFT JOIN department d ON s.department_id = d.id
            LEFT JOIN major m ON s.major_id = m.id
        WHERE s.user_id = #{userId}
    </select>
</mapper>